[package]
name = "societal-node-runtime"
version = "4.0.0-dev"
description = "Societal Node Runtime"
authors = ["Societal <https://github.com/sctllabs>"]
homepage = "https://www.sctl.xyz"
edition = "2021"
license = "Apache-2.0"
publish = false
repository = "https://github.com/sctllabs/societal-node"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]

# Third-party dependencies
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
hex-literal = { workspace = true }
log = { workspace = true }
num_enum = {workspace = true }
scale-info = { workspace = true, features = ["derive"] }
smallvec = { workspace = true }
static_assertions = { workspace = true }

# primitives
node-primitives = { workspace = true }
sp-api = { workspace = true }
sp-authority-discovery = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-io = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-staking = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }

# frame dependencies
frame-election-provider-support = { workspace = true }
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-try-runtime = { workspace = true }
pallet-assets = { workspace = true }
pallet-asset-tx-payment = { workspace = true }
pallet-aura = { workspace = true }
pallet-authority-discovery = { workspace = true }
pallet-authorship = { workspace = true }
pallet-babe = { workspace = true }
pallet-bags-list = { workspace = true }
pallet-balances = { workspace = true }
pallet-bounties = { workspace = true }
pallet-child-bounties = { workspace = true }
pallet-collective = { workspace = true }
pallet-contracts = { workspace = true }
pallet-contracts-primitives = { workspace = true }
pallet-conviction-voting = { workspace = true }
pallet-democracy = { workspace = true }
pallet-elections-phragmen = { workspace = true }
pallet-election-provider-multi-phase = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-im-online = { workspace = true }
pallet-indices = { workspace = true }
pallet-membership = { workspace = true }
pallet-multisig = { workspace = true }
pallet-nicks = { workspace = true }
pallet-nfts = { workspace = true }
pallet-nomination-pools = { workspace = true }
pallet-nomination-pools-runtime-api = { workspace = true }
pallet-offences = { workspace = true }
pallet-proxy = { workspace = true }
pallet-preimage = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
pallet-referenda = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-session = { workspace = true }
pallet-society = { workspace = true }
pallet-staking = { workspace = true }
pallet-staking-reward-curve = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-treasury = { workspace = true }
pallet-uniques = { workspace = true }
pallet-utility = { workspace = true }
pallet-vesting = { workspace = true }

# Frontier dependencies
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true }
pallet-base-fee = { workspace = true }
pallet-dynamic-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-chain-id = { workspace = true }
pallet-evm-precompile-blake2 = { workspace = true }
pallet-evm-precompile-bn128 = { workspace = true }
pallet-evm-precompile-dispatch = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
pallet-hotfix-sufficients = { workspace = true }

# Used for the node's RPCs
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }

# Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }

# Moonbeam
pallet-evm-precompileset-assets-erc20 = { workspace = true }
precompile-utils = { workspace = true }

# Polkadot
pallet-xcm = { workspace = true }
polkadot-parachain = { workspace = true }
polkadot-runtime-common = { workspace = true }
xcm = { workspace = true }
xcm-builder = { workspace = true }
xcm-executor = { workspace = true }

# Cumulus
cumulus-pallet-aura-ext = { workspace = true }
cumulus-pallet-dmp-queue = { workspace = true }
cumulus-pallet-parachain-system = { workspace = true }
cumulus-pallet-session-benchmarking = { workspace = true }
cumulus-pallet-xcm = { workspace = true }
cumulus-pallet-xcmp-queue = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-timestamp = { workspace = true }
cumulus-primitives-utility = { workspace = true }
pallet-collator-selection = { workspace = true }
parachain-info = { workspace = true }

# Local Dependencies
dao-primitives = { default-features = false, path = "../primitives/dao" }
eth-primitives = { default-features = false, path = "../primitives/eth" }
pallet-dao = { default-features = false, path = "../pallets/dao" }
pallet-dao-assets = { workspace = true }
pallet-dao-bounties = { default-features = false, path = "../pallets/dao-bounties" }
pallet-dao-bounties-precompile = { default-features = false, path = "../precompiles/dao-bounties" }
pallet-dao-collective = { default-features = false, path = "../pallets/dao-collective" }
pallet-dao-collective-precompile = { default-features = false, path = "../precompiles/dao-collective" }
pallet-dao-democracy = { default-features = false, path = "../pallets/dao-democracy" }
pallet-dao-democracy-precompile = { default-features = false, path = "../precompiles/dao-democracy" }
pallet-dao-eth-governance = { default-features = false, path = "../pallets/dao-eth-governance" }
pallet-dao-eth-governance-precompile = { default-features = false, path = "../precompiles/dao-eth-governance" }
pallet-dao-membership = { default-features = false, path = "../pallets/dao-membership" }
pallet-dao-membership-precompile = { default-features = false, path = "../precompiles/dao-membership" }
pallet-dao-precompile = { default-features = false, path = "../precompiles/dao" }
pallet-dao-treasury = { default-features = false, path = "../pallets/dao-treasury" }
pallet-dao-treasury-precompile = { default-features = false, path = "../precompiles/dao-treasury" }

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[features]
default = ["std"]

parachain = []

std = [
	"codec/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-dmp-queue/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-timestamp/std",
	"cumulus-primitives-utility/std",
	"fp-rpc/std",
	"fp-self-contained/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"node-primitives/std",
	"pallet-assets/std",
	"pallet-aura/std",
	"pallet-authority-discovery/std",
	"pallet-authorship/std",
	"pallet-babe/std",
	"pallet-bags-list/std",
	"pallet-balances/std",
	"pallet-base-fee/std",
	"pallet-bounties/std",
	"pallet-child-bounties/std",
	"pallet-collator-selection/std",
	"pallet-collective/std",
	"pallet-contracts/std",
	"pallet-contracts-primitives/std",
	"pallet-conviction-voting/std",
	"pallet-dao/std",
	"pallet-dao-assets/std",
	"pallet-dao-bounties/std",
	"pallet-dao-collective/std",
	"pallet-dao-democracy/std",
	"pallet-dao-eth-governance/std",
	"pallet-dao-membership/std",
	"pallet-dao-treasury/std",
	"pallet-democracy/std",
	"pallet-dynamic-fee/std",
	"pallet-elections-phragmen/std",
	"pallet-election-provider-multi-phase/std",
	"pallet-ethereum/std",
	"pallet-evm/std",
	"pallet-evm-chain-id/std",
	"pallet-evm-precompile-modexp/std",
	"pallet-evm-precompile-sha3fips/std",
	"pallet-evm-precompile-simple/std",
	"pallet-grandpa/std",
	"pallet-hotfix-sufficients/std",
	"pallet-im-online/std",
	"pallet-indices/std",
	"pallet-membership/std",
	"pallet-multisig/std",
	"pallet-nicks/std",
	"pallet-nfts/std",
	"pallet-nomination-pools/std",
	"pallet-nomination-pools-runtime-api/std",
	"pallet-offences/std",
	"pallet-preimage/std",
	"pallet-proxy/std",
	"pallet-insecure-randomness-collective-flip/std",
	"pallet-referenda/std",
	"pallet-scheduler/std",
	"pallet-session/std",
	"pallet-society/std",
	"pallet-staking/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-treasury/std",
	"pallet-uniques/std",
	"pallet-utility/std",
	"pallet-vesting/std",
	"pallet-xcm/std",
	"parachain-info/std",
	"polkadot-parachain/std",
	"polkadot-runtime-common/std",
	"precompile-utils/std",
	"scale-info/std",
	"sp-api/std",
	"sp-authority-discovery/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-consensus-babe/std",
	"sp-core/std",
	"sp-inherents/std",
	"sp-io/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"xcm/std",
	"xcm-builder/std",
	"xcm-executor/std",
]
runtime-benchmarks = [
	"dao-primitives/runtime-benchmarks",
	"cumulus-pallet-session-benchmarking/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-bags-list/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-bounties/runtime-benchmarks",
	"pallet-child-bounties/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-collator-selection/runtime-benchmarks",
	"pallet-contracts/runtime-benchmarks",
	"pallet-conviction-voting/runtime-benchmarks",
	"pallet-democracy/runtime-benchmarks",
	"pallet-dao/runtime-benchmarks",
	"pallet-dao-bounties/runtime-benchmarks",
	"pallet-dao-collective/runtime-benchmarks",
	"pallet-dao-democracy/runtime-benchmarks",
	"pallet-dao-membership/runtime-benchmarks",
	"pallet-dao-treasury/runtime-benchmarks",
	"pallet-election-provider-multi-phase/runtime-benchmarks",
	"pallet-elections-phragmen/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
	"pallet-evm/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-hotfix-sufficients/runtime-benchmarks",
	"pallet-im-online/runtime-benchmarks",
	"pallet-indices/runtime-benchmarks",
	"pallet-membership/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-referenda/runtime-benchmarks",
	"pallet-society/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-uniques/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-vesting/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"xcm-executor/runtime-benchmarks",
]
try-runtime = [
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-dmp-queue/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"frame-executive/try-runtime",
	"frame-system/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-collator-selection/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-dao/try-runtime",
	"pallet-dao-assets/try-runtime",
	"pallet-dao-bounties/try-runtime",
	"pallet-dao-collective/try-runtime",
	"pallet-dao-membership/try-runtime",
	"pallet-dao-treasury/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-authority-discovery/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-bags-list/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-bounties/try-runtime",
	"pallet-child-bounties/try-runtime",
	"pallet-collective/try-runtime",
	"pallet-conviction-voting/try-runtime",
	"pallet-democracy/try-runtime",
	"pallet-elections-phragmen/try-runtime",
	"pallet-election-provider-multi-phase/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-im-online/try-runtime",
	"pallet-indices/try-runtime",
	"pallet-membership/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-offences/try-runtime",
	"pallet-preimage/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-referenda/try-runtime",
	"pallet-session/try-runtime",
	"pallet-society/try-runtime",
	"pallet-staking/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-uniques/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-vesting/try-runtime",
	"pallet-xcm/try-runtime",
	"parachain-info/try-runtime",
]

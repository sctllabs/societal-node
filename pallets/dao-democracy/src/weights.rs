
//! Autogenerated weights for pallet_dao_democracy
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-12, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/societal-node
// benchmark
// pallet
// --chain
// dev
// --steps
// 50
// --repeat
// 20
// --pallet
// pallet_dao_democracy
// --extrinsic
// *
// --execution
// wasm
// --wasm-execution
// compiled
// --template
// ./.maintain/frame-weight-template.hbs
// --output
// ./pallets/dao-democracy/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_dao_democracy.
pub trait WeightInfo {
	fn propose_with_meta() -> Weight;
	fn second() -> Weight;
	fn vote_new() -> Weight;
	fn vote_existing() -> Weight;
	fn emergency_cancel() -> Weight;
	fn blacklist() -> Weight;
	fn external_propose() -> Weight;
	fn external_propose_majority() -> Weight;
	fn external_propose_default() -> Weight;
	fn fast_track() -> Weight;
	fn veto_external() -> Weight;
	fn cancel_proposal() -> Weight;
	fn cancel_referendum() -> Weight;
	fn delegate(r: u32, ) -> Weight;
	fn undelegate(r: u32, ) -> Weight;
	fn unlock_remove(r: u32, ) -> Weight;
	fn unlock_set(r: u32, ) -> Weight;
	fn remove_vote(r: u32, ) -> Weight;
	fn remove_other_vote(r: u32, ) -> Weight;
}

/// Weights for pallet_dao_democracy using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy PublicPropCount (r:1 w:1)
	/// Proof: DaoDemocracy PublicPropCount (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy PublicProps (r:1 w:1)
	/// Proof: DaoDemocracy PublicProps (max_values: None, max_size: Some(8363), added: 10838, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy Blacklist (r:1 w:0)
	/// Proof: DaoDemocracy Blacklist (max_values: None, max_size: Some(3250), added: 5725, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:0)
	/// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy DepositOf (r:0 w:1)
	/// Proof: DaoDemocracy DepositOf (max_values: None, max_size: Some(3242), added: 5717, mode: MaxEncodedLen)
	fn propose_with_meta() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4064`
		//  Estimated: `37475`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(51_000_000, 37475)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: DaoDemocracy DepositOf (r:1 w:1)
	/// Proof: DaoDemocracy DepositOf (max_values: None, max_size: Some(3242), added: 5717, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:0)
	/// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
	fn second() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4885`
		//  Estimated: `18533`
		// Minimum execution time: 42_000_000 picoseconds.
		Weight::from_parts(42_000_000, 18533)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: Assets Locks (r:1 w:1)
	/// Proof: Assets Locks (max_values: None, max_size: Some(321), added: 2796, mode: MaxEncodedLen)
	fn vote_new() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4045`
		//  Estimated: `22875`
		// Minimum execution time: 49_000_000 picoseconds.
		Weight::from_parts(50_000_000, 22875)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: Assets Locks (r:1 w:1)
	/// Proof: Assets Locks (max_values: None, max_size: Some(321), added: 2796, mode: MaxEncodedLen)
	fn vote_existing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4067`
		//  Estimated: `22875`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(59_000_000, 22875)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy Cancellations (r:1 w:1)
	/// Proof: DaoDemocracy Cancellations (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	fn emergency_cancel() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `664`
		//  Estimated: `10813`
		// Minimum execution time: 22_000_000 picoseconds.
		Weight::from_parts(23_000_000, 10813)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy PublicProps (r:1 w:1)
	/// Proof: DaoDemocracy PublicProps (max_values: None, max_size: Some(8363), added: 10838, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy DepositOf (r:1 w:1)
	/// Proof: DaoDemocracy DepositOf (max_values: None, max_size: Some(3242), added: 5717, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:0)
	/// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:1 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy Blacklist (r:0 w:1)
	/// Proof: DaoDemocracy Blacklist (max_values: None, max_size: Some(3250), added: 5725, mode: MaxEncodedLen)
	fn blacklist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4927`
		//  Estimated: `41273`
		// Minimum execution time: 72_000_000 picoseconds.
		Weight::from_parts(73_000_000, 41273)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:1 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy Blacklist (r:1 w:0)
	/// Proof: DaoDemocracy Blacklist (max_values: None, max_size: Some(3250), added: 5725, mode: MaxEncodedLen)
	fn external_propose() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3758`
		//  Estimated: `13949`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 13949)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:0 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	fn external_propose_majority() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `331`
		//  Estimated: `3625`
		// Minimum execution time: 9_000_000 picoseconds.
		Weight::from_parts(10_000_000, 3625)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:0 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	fn external_propose_default() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `331`
		//  Estimated: `3625`
		// Minimum execution time: 9_000_000 picoseconds.
		Weight::from_parts(10_000_000, 3625)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:1 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumCount (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumCount (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:0 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	fn fast_track() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `557`
		//  Estimated: `10715`
		// Minimum execution time: 23_000_000 picoseconds.
		Weight::from_parts(23_000_000, 10715)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:1 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy Blacklist (r:1 w:1)
	/// Proof: DaoDemocracy Blacklist (max_values: None, max_size: Some(3250), added: 5725, mode: MaxEncodedLen)
	fn veto_external() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3800`
		//  Estimated: `13949`
		// Minimum execution time: 26_000_000 picoseconds.
		Weight::from_parts(27_000_000, 13949)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy PublicProps (r:1 w:1)
	/// Proof: DaoDemocracy PublicProps (max_values: None, max_size: Some(8363), added: 10838, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy DepositOf (r:1 w:1)
	/// Proof: DaoDemocracy DepositOf (max_values: None, max_size: Some(3242), added: 5717, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:0)
	/// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
	fn cancel_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4778`
		//  Estimated: `33986`
		// Minimum execution time: 56_000_000 picoseconds.
		Weight::from_parts(56_000_000, 33986)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:0 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	fn cancel_referendum() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `331`
		//  Estimated: `3625`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(14_000_000, 3625)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:3 w:3)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:99 w:99)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Assets Locks (r:1 w:1)
	/// Proof: Assets Locks (max_values: None, max_size: Some(321), added: 2796, mode: MaxEncodedLen)
	/// The range of component `r` is `[0, 99]`.
	fn delegate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1627 + r * (108 ±0)`
		//  Estimated: `36376 + r * (2688 ±0)`
		// Minimum execution time: 46_000_000 picoseconds.
		Weight::from_parts(49_210_856, 36376)
			// Standard Error: 9_179
			.saturating_add(Weight::from_parts(4_212_344, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2688).saturating_mul(r.into()))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:2 w:2)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:99 w:99)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// The range of component `r` is `[0, 99]`.
	fn undelegate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `867 + r * (108 ±0)`
		//  Estimated: `18169 + r * (2688 ±0)`
		// Minimum execution time: 24_000_000 picoseconds.
		Weight::from_parts(24_498_174, 18169)
			// Standard Error: 15_478
			.saturating_add(Weight::from_parts(4_296_569, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2688).saturating_mul(r.into()))
	}
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: Assets Locks (r:1 w:1)
	/// Proof: Assets Locks (max_values: None, max_size: Some(321), added: 2796, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `r` is `[0, 99]`.
	fn unlock_remove(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1286`
		//  Estimated: `22790`
		// Minimum execution time: 24_000_000 picoseconds.
		Weight::from_parts(33_637_200, 22790)
			// Standard Error: 3_005
			.saturating_add(Weight::from_parts(43_386, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: Assets Locks (r:1 w:1)
	/// Proof: Assets Locks (max_values: None, max_size: Some(321), added: 2796, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `r` is `[0, 99]`.
	fn unlock_set(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1147 + r * (22 ±0)`
		//  Estimated: `22790`
		// Minimum execution time: 30_000_000 picoseconds.
		Weight::from_parts(31_643_647, 22790)
			// Standard Error: 1_232
			.saturating_add(Weight::from_parts(56_922, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 100]`.
	fn remove_vote(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1103 + r * (26 ±0)`
		//  Estimated: `14575`
		// Minimum execution time: 19_000_000 picoseconds.
		Weight::from_parts(21_782_485, 14575)
			// Standard Error: 1_904
			.saturating_add(Weight::from_parts(55_807, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 100]`.
	fn remove_other_vote(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1103 + r * (26 ±0)`
		//  Estimated: `14575`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(20_859_108, 14575)
			// Standard Error: 981
			.saturating_add(Weight::from_parts(63_672, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy PublicPropCount (r:1 w:1)
	/// Proof: DaoDemocracy PublicPropCount (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy PublicProps (r:1 w:1)
	/// Proof: DaoDemocracy PublicProps (max_values: None, max_size: Some(8363), added: 10838, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy Blacklist (r:1 w:0)
	/// Proof: DaoDemocracy Blacklist (max_values: None, max_size: Some(3250), added: 5725, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:0)
	/// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy DepositOf (r:0 w:1)
	/// Proof: DaoDemocracy DepositOf (max_values: None, max_size: Some(3242), added: 5717, mode: MaxEncodedLen)
	fn propose_with_meta() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4064`
		//  Estimated: `37475`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(51_000_000, 37475)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: DaoDemocracy DepositOf (r:1 w:1)
	/// Proof: DaoDemocracy DepositOf (max_values: None, max_size: Some(3242), added: 5717, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:0)
	/// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
	fn second() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4885`
		//  Estimated: `18533`
		// Minimum execution time: 42_000_000 picoseconds.
		Weight::from_parts(42_000_000, 18533)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: Assets Locks (r:1 w:1)
	/// Proof: Assets Locks (max_values: None, max_size: Some(321), added: 2796, mode: MaxEncodedLen)
	fn vote_new() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4045`
		//  Estimated: `22875`
		// Minimum execution time: 49_000_000 picoseconds.
		Weight::from_parts(50_000_000, 22875)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: Assets Locks (r:1 w:1)
	/// Proof: Assets Locks (max_values: None, max_size: Some(321), added: 2796, mode: MaxEncodedLen)
	fn vote_existing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4067`
		//  Estimated: `22875`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(59_000_000, 22875)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy Cancellations (r:1 w:1)
	/// Proof: DaoDemocracy Cancellations (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	fn emergency_cancel() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `664`
		//  Estimated: `10813`
		// Minimum execution time: 22_000_000 picoseconds.
		Weight::from_parts(23_000_000, 10813)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy PublicProps (r:1 w:1)
	/// Proof: DaoDemocracy PublicProps (max_values: None, max_size: Some(8363), added: 10838, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy DepositOf (r:1 w:1)
	/// Proof: DaoDemocracy DepositOf (max_values: None, max_size: Some(3242), added: 5717, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:0)
	/// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:1 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy Blacklist (r:0 w:1)
	/// Proof: DaoDemocracy Blacklist (max_values: None, max_size: Some(3250), added: 5725, mode: MaxEncodedLen)
	fn blacklist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4927`
		//  Estimated: `41273`
		// Minimum execution time: 72_000_000 picoseconds.
		Weight::from_parts(73_000_000, 41273)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:1 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy Blacklist (r:1 w:0)
	/// Proof: DaoDemocracy Blacklist (max_values: None, max_size: Some(3250), added: 5725, mode: MaxEncodedLen)
	fn external_propose() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3758`
		//  Estimated: `13949`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 13949)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:0 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	fn external_propose_majority() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `331`
		//  Estimated: `3625`
		// Minimum execution time: 9_000_000 picoseconds.
		Weight::from_parts(10_000_000, 3625)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:0 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	fn external_propose_default() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `331`
		//  Estimated: `3625`
		// Minimum execution time: 9_000_000 picoseconds.
		Weight::from_parts(10_000_000, 3625)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:1 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumCount (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumCount (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:0 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	fn fast_track() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `557`
		//  Estimated: `10715`
		// Minimum execution time: 23_000_000 picoseconds.
		Weight::from_parts(23_000_000, 10715)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy NextExternal (r:1 w:1)
	/// Proof: DaoDemocracy NextExternal (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy Blacklist (r:1 w:1)
	/// Proof: DaoDemocracy Blacklist (max_values: None, max_size: Some(3250), added: 5725, mode: MaxEncodedLen)
	fn veto_external() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3800`
		//  Estimated: `13949`
		// Minimum execution time: 26_000_000 picoseconds.
		Weight::from_parts(27_000_000, 13949)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy PublicProps (r:1 w:1)
	/// Proof: DaoDemocracy PublicProps (max_values: None, max_size: Some(8363), added: 10838, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy DepositOf (r:1 w:1)
	/// Proof: DaoDemocracy DepositOf (max_values: None, max_size: Some(3242), added: 5717, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:0)
	/// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
	fn cancel_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4778`
		//  Estimated: `33986`
		// Minimum execution time: 56_000_000 picoseconds.
		Weight::from_parts(56_000_000, 33986)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:0 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	fn cancel_referendum() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `331`
		//  Estimated: `3625`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(14_000_000, 3625)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:3 w:3)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:99 w:99)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: Assets Locks (r:1 w:1)
	/// Proof: Assets Locks (max_values: None, max_size: Some(321), added: 2796, mode: MaxEncodedLen)
	/// The range of component `r` is `[0, 99]`.
	fn delegate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1627 + r * (108 ±0)`
		//  Estimated: `36376 + r * (2688 ±0)`
		// Minimum execution time: 46_000_000 picoseconds.
		Weight::from_parts(49_210_856, 36376)
			// Standard Error: 9_179
			.saturating_add(Weight::from_parts(4_212_344, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2688).saturating_mul(r.into()))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:2 w:2)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:99 w:99)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// The range of component `r` is `[0, 99]`.
	fn undelegate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `867 + r * (108 ±0)`
		//  Estimated: `18169 + r * (2688 ±0)`
		// Minimum execution time: 24_000_000 picoseconds.
		Weight::from_parts(24_498_174, 18169)
			// Standard Error: 15_478
			.saturating_add(Weight::from_parts(4_296_569, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2688).saturating_mul(r.into()))
	}
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: Assets Locks (r:1 w:1)
	/// Proof: Assets Locks (max_values: None, max_size: Some(321), added: 2796, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `r` is `[0, 99]`.
	fn unlock_remove(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1286`
		//  Estimated: `22790`
		// Minimum execution time: 24_000_000 picoseconds.
		Weight::from_parts(33_637_200, 22790)
			// Standard Error: 3_005
			.saturating_add(Weight::from_parts(43_386, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// Storage: Assets Locks (r:1 w:1)
	/// Proof: Assets Locks (max_values: None, max_size: Some(321), added: 2796, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:1 w:1)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `r` is `[0, 99]`.
	fn unlock_set(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1147 + r * (22 ±0)`
		//  Estimated: `22790`
		// Minimum execution time: 30_000_000 picoseconds.
		Weight::from_parts(31_643_647, 22790)
			// Standard Error: 1_232
			.saturating_add(Weight::from_parts(56_922, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 100]`.
	fn remove_vote(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1103 + r * (26 ±0)`
		//  Estimated: `14575`
		// Minimum execution time: 19_000_000 picoseconds.
		Weight::from_parts(21_782_485, 14575)
			// Standard Error: 1_904
			.saturating_add(Weight::from_parts(55_807, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy ReferendumInfoOf (r:1 w:1)
	/// Proof: DaoDemocracy ReferendumInfoOf (max_values: None, max_size: Some(213), added: 2688, mode: MaxEncodedLen)
	/// Storage: DaoDemocracy VotingOf (r:1 w:1)
	/// Proof: DaoDemocracy VotingOf (max_values: None, max_size: Some(3807), added: 6282, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 100]`.
	fn remove_other_vote(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1103 + r * (26 ±0)`
		//  Estimated: `14575`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(20_859_108, 14575)
			// Standard Error: 981
			.saturating_add(Weight::from_parts(63_672, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
}

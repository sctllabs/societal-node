
//! Autogenerated weights for pallet_dao_collective
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-08, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `macbook-pro.lan`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/societal-node
// benchmark
// pallet
// --chain
// dev
// --steps
// 50
// --repeat
// 20
// --pallet
// pallet_dao_collective
// --extrinsic
// *
// --execution
// wasm
// --wasm-execution
// compiled
// --template
// ./.maintain/frame-weight-template.hbs
// --output
// ./pallets/dao-collective/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_dao_collective.
pub trait WeightInfo {
	fn propose_with_meta(b: u32, m: u32, p: u32, ) -> Weight;
	fn vote(m: u32, ) -> Weight;
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight;
	fn close_early_approved(b: u32, m: u32, p: u32, ) -> Weight;
	fn close_disapproved(m: u32, p: u32, ) -> Weight;
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight;
}

/// Weights for pallet_dao_collective using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: Preimage StatusFor (r:1 w:1)
	/// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalOf (r:1 w:1)
	/// Proof: DaoCouncil ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Proposals (r:1 w:1)
	/// Proof: DaoCouncil Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalCount (r:1 w:1)
	/// Proof: DaoCouncil ProposalCount (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Voting (r:0 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// Storage: Preimage PreimageFor (r:0 w:1)
	/// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819, mode: MaxEncodedLen)
	/// The range of component `b` is `[1, 1024]`.
	/// The range of component `m` is `[2, 100]`.
	/// The range of component `p` is `[1, 50]`.
	fn propose_with_meta(b: u32, m: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `920 + m * (32 ±0) + p * (59 ±0)`
		//  Estimated: `72000`
		// Minimum execution time: 57_000_000 picoseconds.
		Weight::from_parts(54_242_938, 72000)
			// Standard Error: 340
			.saturating_add(Weight::from_parts(9_216, 0).saturating_mul(b.into()))
			// Standard Error: 3_560
			.saturating_add(Weight::from_parts(33_385, 0).saturating_mul(m.into()))
			// Standard Error: 7_120
			.saturating_add(Weight::from_parts(281_910, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Voting (r:1 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// The range of component `m` is `[5, 100]`.
	fn vote(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `771 + m * (64 ±0)`
		//  Estimated: `16604`
		// Minimum execution time: 20_000_000 picoseconds.
		Weight::from_parts(22_203_725, 16604)
			// Standard Error: 2_733
			.saturating_add(Weight::from_parts(23_534, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: DaoCouncil Voting (r:1 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Proposals (r:1 w:1)
	/// Proof: DaoCouncil Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalOf (r:0 w:1)
	/// Proof: DaoCouncil ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// The range of component `m` is `[4, 100]`.
	/// The range of component `p` is `[1, 50]`.
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `528 + m * (64 ±0) + p * (166 ±0)`
		//  Estimated: `67623`
		// Minimum execution time: 40_000_000 picoseconds.
		Weight::from_parts(45_512_069, 67623)
			// Standard Error: 3_652
			.saturating_add(Weight::from_parts(5_792, 0).saturating_mul(m.into()))
			// Standard Error: 7_211
			.saturating_add(Weight::from_parts(1_351_921, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: DaoCouncil Voting (r:1 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalOf (r:1 w:1)
	/// Proof: DaoCouncil ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// Storage: Preimage PreimageFor (r:1 w:0)
	/// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Proposals (r:1 w:1)
	/// Proof: DaoCouncil Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// The range of component `b` is `[1, 1024]`.
	/// The range of component `m` is `[4, 100]`.
	/// The range of component `p` is `[1, 50]`.
	fn close_early_approved(_b: u32, m: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `871 + b * (1 ±0) + m * (64 ±0) + p * (185 ±0)`
		//  Estimated: `4269072`
		// Minimum execution time: 58_000_000 picoseconds.
		Weight::from_parts(63_851_219, 4269072)
			// Standard Error: 7_337
			.saturating_add(Weight::from_parts(26_618, 0).saturating_mul(m.into()))
			// Standard Error: 14_488
			.saturating_add(Weight::from_parts(1_439_137, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: DaoCouncil Voting (r:1 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Proposals (r:1 w:1)
	/// Proof: DaoCouncil Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalOf (r:0 w:1)
	/// Proof: DaoCouncil ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// The range of component `m` is `[4, 100]`.
	/// The range of component `p` is `[1, 50]`.
	fn close_disapproved(m: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `496 + m * (64 ±0) + p * (166 ±0)`
		//  Estimated: `67623`
		// Minimum execution time: 40_000_000 picoseconds.
		Weight::from_parts(40_933_464, 67623)
			// Standard Error: 4_370
			.saturating_add(Weight::from_parts(35_281, 0).saturating_mul(m.into()))
			// Standard Error: 8_627
			.saturating_add(Weight::from_parts(1_431_089, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: DaoCouncil Voting (r:1 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalOf (r:1 w:1)
	/// Proof: DaoCouncil ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// Storage: Preimage PreimageFor (r:1 w:0)
	/// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Proposals (r:1 w:1)
	/// Proof: DaoCouncil Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// The range of component `b` is `[1, 1024]`.
	/// The range of component `m` is `[4, 100]`.
	/// The range of component `p` is `[1, 50]`.
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `839 + b * (1 ±0) + m * (64 ±0) + p * (185 ±0)`
		//  Estimated: `4269072`
		// Minimum execution time: 58_000_000 picoseconds.
		Weight::from_parts(59_632_692, 4269072)
			// Standard Error: 480
			.saturating_add(Weight::from_parts(667, 0).saturating_mul(b.into()))
			// Standard Error: 5_084
			.saturating_add(Weight::from_parts(35_791, 0).saturating_mul(m.into()))
			// Standard Error: 10_039
			.saturating_add(Weight::from_parts(1_452_654, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: Preimage StatusFor (r:1 w:1)
	/// Proof: Preimage StatusFor (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalOf (r:1 w:1)
	/// Proof: DaoCouncil ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Proposals (r:1 w:1)
	/// Proof: DaoCouncil Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalCount (r:1 w:1)
	/// Proof: DaoCouncil ProposalCount (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Voting (r:0 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// Storage: Preimage PreimageFor (r:0 w:1)
	/// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819, mode: MaxEncodedLen)
	/// The range of component `b` is `[1, 1024]`.
	/// The range of component `m` is `[2, 100]`.
	/// The range of component `p` is `[1, 50]`.
	fn propose_with_meta(b: u32, m: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `920 + m * (32 ±0) + p * (59 ±0)`
		//  Estimated: `72000`
		// Minimum execution time: 57_000_000 picoseconds.
		Weight::from_parts(54_242_938, 72000)
			// Standard Error: 340
			.saturating_add(Weight::from_parts(9_216, 0).saturating_mul(b.into()))
			// Standard Error: 3_560
			.saturating_add(Weight::from_parts(33_385, 0).saturating_mul(m.into()))
			// Standard Error: 7_120
			.saturating_add(Weight::from_parts(281_910, 0).saturating_mul(p.into()))
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Voting (r:1 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// The range of component `m` is `[5, 100]`.
	fn vote(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `771 + m * (64 ±0)`
		//  Estimated: `16604`
		// Minimum execution time: 20_000_000 picoseconds.
		Weight::from_parts(22_203_725, 16604)
			// Standard Error: 2_733
			.saturating_add(Weight::from_parts(23_534, 0).saturating_mul(m.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: DaoCouncil Voting (r:1 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Proposals (r:1 w:1)
	/// Proof: DaoCouncil Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalOf (r:0 w:1)
	/// Proof: DaoCouncil ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// The range of component `m` is `[4, 100]`.
	/// The range of component `p` is `[1, 50]`.
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `528 + m * (64 ±0) + p * (166 ±0)`
		//  Estimated: `67623`
		// Minimum execution time: 40_000_000 picoseconds.
		Weight::from_parts(45_512_069, 67623)
			// Standard Error: 3_652
			.saturating_add(Weight::from_parts(5_792, 0).saturating_mul(m.into()))
			// Standard Error: 7_211
			.saturating_add(Weight::from_parts(1_351_921, 0).saturating_mul(p.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: DaoCouncil Voting (r:1 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalOf (r:1 w:1)
	/// Proof: DaoCouncil ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// Storage: Preimage PreimageFor (r:1 w:0)
	/// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Proposals (r:1 w:1)
	/// Proof: DaoCouncil Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// The range of component `b` is `[1, 1024]`.
	/// The range of component `m` is `[4, 100]`.
	/// The range of component `p` is `[1, 50]`.
	fn close_early_approved(_b: u32, m: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `871 + b * (1 ±0) + m * (64 ±0) + p * (185 ±0)`
		//  Estimated: `4269072`
		// Minimum execution time: 58_000_000 picoseconds.
		Weight::from_parts(63_851_219, 4269072)
			// Standard Error: 7_337
			.saturating_add(Weight::from_parts(26_618, 0).saturating_mul(m.into()))
			// Standard Error: 14_488
			.saturating_add(Weight::from_parts(1_439_137, 0).saturating_mul(p.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: DaoCouncil Voting (r:1 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Proposals (r:1 w:1)
	/// Proof: DaoCouncil Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalOf (r:0 w:1)
	/// Proof: DaoCouncil ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// The range of component `m` is `[4, 100]`.
	/// The range of component `p` is `[1, 50]`.
	fn close_disapproved(m: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `496 + m * (64 ±0) + p * (166 ±0)`
		//  Estimated: `67623`
		// Minimum execution time: 40_000_000 picoseconds.
		Weight::from_parts(40_933_464, 67623)
			// Standard Error: 4_370
			.saturating_add(Weight::from_parts(35_281, 0).saturating_mul(m.into()))
			// Standard Error: 8_627
			.saturating_add(Weight::from_parts(1_431_089, 0).saturating_mul(p.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: DaoCouncil Voting (r:1 w:1)
	/// Proof: DaoCouncil Voting (max_values: None, max_size: Some(6460), added: 8935, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Members (r:1 w:0)
	/// Proof: DaoCouncil Members (max_values: None, max_size: Some(3214), added: 5689, mode: MaxEncodedLen)
	/// Storage: DaoCouncil ProposalOf (r:1 w:1)
	/// Proof: DaoCouncil ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// Storage: Preimage PreimageFor (r:1 w:0)
	/// Proof: Preimage PreimageFor (max_values: None, max_size: Some(4194344), added: 4196819, mode: MaxEncodedLen)
	/// Storage: DaoCouncil Proposals (r:1 w:1)
	/// Proof: DaoCouncil Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// The range of component `b` is `[1, 1024]`.
	/// The range of component `m` is `[4, 100]`.
	/// The range of component `p` is `[1, 50]`.
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `839 + b * (1 ±0) + m * (64 ±0) + p * (185 ±0)`
		//  Estimated: `4269072`
		// Minimum execution time: 58_000_000 picoseconds.
		Weight::from_parts(59_632_692, 4269072)
			// Standard Error: 480
			.saturating_add(Weight::from_parts(667, 0).saturating_mul(b.into()))
			// Standard Error: 5_084
			.saturating_add(Weight::from_parts(35_791, 0).saturating_mul(m.into()))
			// Standard Error: 10_039
			.saturating_add(Weight::from_parts(1_452_654, 0).saturating_mul(p.into()))
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
}

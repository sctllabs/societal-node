
//! Autogenerated weights for pallet_dao_eth_governance
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-15, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/societal-node
// benchmark
// pallet
// --chain
// dev
// --steps
// 50
// --repeat
// 20
// --pallet
// pallet_dao_eth_governance
// --extrinsic
// *
// --execution
// wasm
// --wasm-execution
// compiled
// --template
// ./.maintain/frame-weight-template.hbs
// --output
// ./pallets/dao-eth-governance/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_dao_eth_governance.
pub trait WeightInfo {
	fn propose_with_meta() -> Weight;
	fn approve_propose() -> Weight;
	fn vote() -> Weight;
	fn approve_vote() -> Weight;
	fn close() -> Weight;
}

/// Weights for pallet_dao_eth_governance using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingProposals (r:1 w:1)
	/// Proof: DaoEthGovernance PendingProposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingProposalOf (r:0 w:1)
	/// Proof: DaoEthGovernance PendingProposalOf (max_values: None, max_size: Some(967), added: 3442, mode: MaxEncodedLen)
	fn propose_with_meta() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1968`
		//  Estimated: `9606`
		// Minimum execution time: 34_000_000 picoseconds.
		Weight::from_parts(37_000_000, 9606)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: DaoEthGovernance PendingProposalOf (r:1 w:1)
	/// Proof: DaoEthGovernance PendingProposalOf (max_values: None, max_size: Some(967), added: 3442, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingProposals (r:1 w:1)
	/// Proof: DaoEthGovernance PendingProposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance ProposalOf (r:1 w:1)
	/// Proof: DaoEthGovernance ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance Proposals (r:1 w:1)
	/// Proof: DaoEthGovernance Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance ProposalCount (r:1 w:1)
	/// Proof: DaoEthGovernance ProposalCount (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance Voting (r:0 w:1)
	/// Proof: DaoEthGovernance Voting (max_values: None, max_size: Some(4974), added: 7449, mode: MaxEncodedLen)
	fn approve_propose() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4127`
		//  Estimated: `71275`
		// Minimum execution time: 63_000_000 picoseconds.
		Weight::from_parts(72_000_000, 71275)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: DaoEthGovernance Voting (r:1 w:0)
	/// Proof: DaoEthGovernance Voting (max_values: None, max_size: Some(4974), added: 7449, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingVotes (r:1 w:1)
	/// Proof: DaoEthGovernance PendingVotes (max_values: None, max_size: Some(1617), added: 4092, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingVoting (r:0 w:1)
	/// Proof: DaoEthGovernance PendingVoting (max_values: None, max_size: Some(133), added: 2608, mode: MaxEncodedLen)
	fn vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `591`
		//  Estimated: `18049`
		// Minimum execution time: 26_000_000 picoseconds.
		Weight::from_parts(27_000_000, 18049)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: DaoEthGovernance PendingVoting (r:1 w:1)
	/// Proof: DaoEthGovernance PendingVoting (max_values: None, max_size: Some(133), added: 2608, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingVotes (r:1 w:1)
	/// Proof: DaoEthGovernance PendingVotes (max_values: None, max_size: Some(1617), added: 4092, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance Voting (r:1 w:1)
	/// Proof: DaoEthGovernance Voting (max_values: None, max_size: Some(4974), added: 7449, mode: MaxEncodedLen)
	fn approve_vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `501`
		//  Estimated: `17119`
		// Minimum execution time: 22_000_000 picoseconds.
		Weight::from_parts(23_000_000, 17119)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: DaoEthGovernance Voting (r:1 w:1)
	/// Proof: DaoEthGovernance Voting (max_values: None, max_size: Some(4974), added: 7449, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance ProposalOf (r:1 w:1)
	/// Proof: DaoEthGovernance ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance Proposals (r:1 w:1)
	/// Proof: DaoEthGovernance Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	fn close() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `701`
		//  Estimated: `63098`
		// Minimum execution time: 49_000_000 picoseconds.
		Weight::from_parts(52_000_000, 63098)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingProposals (r:1 w:1)
	/// Proof: DaoEthGovernance PendingProposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingProposalOf (r:0 w:1)
	/// Proof: DaoEthGovernance PendingProposalOf (max_values: None, max_size: Some(967), added: 3442, mode: MaxEncodedLen)
	fn propose_with_meta() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1968`
		//  Estimated: `9606`
		// Minimum execution time: 34_000_000 picoseconds.
		Weight::from_parts(37_000_000, 9606)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: DaoEthGovernance PendingProposalOf (r:1 w:1)
	/// Proof: DaoEthGovernance PendingProposalOf (max_values: None, max_size: Some(967), added: 3442, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingProposals (r:1 w:1)
	/// Proof: DaoEthGovernance PendingProposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance ProposalOf (r:1 w:1)
	/// Proof: DaoEthGovernance ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance Proposals (r:1 w:1)
	/// Proof: DaoEthGovernance Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance ProposalCount (r:1 w:1)
	/// Proof: DaoEthGovernance ProposalCount (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance Voting (r:0 w:1)
	/// Proof: DaoEthGovernance Voting (max_values: None, max_size: Some(4974), added: 7449, mode: MaxEncodedLen)
	fn approve_propose() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4127`
		//  Estimated: `71275`
		// Minimum execution time: 63_000_000 picoseconds.
		Weight::from_parts(72_000_000, 71275)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: DaoEthGovernance Voting (r:1 w:0)
	/// Proof: DaoEthGovernance Voting (max_values: None, max_size: Some(4974), added: 7449, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingVotes (r:1 w:1)
	/// Proof: DaoEthGovernance PendingVotes (max_values: None, max_size: Some(1617), added: 4092, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingVoting (r:0 w:1)
	/// Proof: DaoEthGovernance PendingVoting (max_values: None, max_size: Some(133), added: 2608, mode: MaxEncodedLen)
	fn vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `591`
		//  Estimated: `18049`
		// Minimum execution time: 26_000_000 picoseconds.
		Weight::from_parts(27_000_000, 18049)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: DaoEthGovernance PendingVoting (r:1 w:1)
	/// Proof: DaoEthGovernance PendingVoting (max_values: None, max_size: Some(133), added: 2608, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance PendingVotes (r:1 w:1)
	/// Proof: DaoEthGovernance PendingVotes (max_values: None, max_size: Some(1617), added: 4092, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance Voting (r:1 w:1)
	/// Proof: DaoEthGovernance Voting (max_values: None, max_size: Some(4974), added: 7449, mode: MaxEncodedLen)
	fn approve_vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `501`
		//  Estimated: `17119`
		// Minimum execution time: 22_000_000 picoseconds.
		Weight::from_parts(23_000_000, 17119)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: DaoEthGovernance Voting (r:1 w:1)
	/// Proof: DaoEthGovernance Voting (max_values: None, max_size: Some(4974), added: 7449, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance ProposalOf (r:1 w:1)
	/// Proof: DaoEthGovernance ProposalOf (max_values: None, max_size: Some(175), added: 2650, mode: MaxEncodedLen)
	/// Storage: DaoEthGovernance Proposals (r:1 w:1)
	/// Proof: DaoEthGovernance Proposals (max_values: None, max_size: Some(1613), added: 4088, mode: MaxEncodedLen)
	/// Storage: Scheduler Lookup (r:1 w:1)
	/// Proof: Scheduler Lookup (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Scheduler Agenda (r:1 w:1)
	/// Proof: Scheduler Agenda (max_values: None, max_size: Some(38963), added: 41438, mode: MaxEncodedLen)
	fn close() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `701`
		//  Estimated: `63098`
		// Minimum execution time: 49_000_000 picoseconds.
		Weight::from_parts(52_000_000, 63098)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
}

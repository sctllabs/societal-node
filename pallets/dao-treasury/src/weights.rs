
//! Autogenerated weights for pallet_dao_treasury
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-08, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `macbook-pro.lan`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/societal-node
// benchmark
// pallet
// --chain
// dev
// --steps
// 50
// --repeat
// 20
// --pallet
// pallet_dao_treasury
// --extrinsic
// *
// --execution
// wasm
// --wasm-execution
// compiled
// --template
// ./.maintain/frame-weight-template.hbs
// --output
// ./pallets/dao-treasury/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_dao_treasury.
pub trait WeightInfo {
	fn spend() -> Weight;
	fn transfer_token() -> Weight;
}

/// Weights for pallet_dao_treasury using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoTreasury ProposalCount (r:1 w:1)
	/// Proof: DaoTreasury ProposalCount (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: DaoTreasury Approvals (r:1 w:1)
	/// Proof: DaoTreasury Approvals (max_values: None, max_size: Some(414), added: 2889, mode: MaxEncodedLen)
	/// Storage: DaoTreasury Proposals (r:0 w:1)
	/// Proof: DaoTreasury Proposals (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	fn spend() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `390`
		//  Estimated: `10985`
		// Minimum execution time: 19_000_000 picoseconds.
		Weight::from_parts(20_000_000, 10985)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn transfer_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `865`
		//  Estimated: `21665`
		// Minimum execution time: 49_000_000 picoseconds.
		Weight::from_parts(49_000_000, 21665)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: DaoTreasury ProposalCount (r:1 w:1)
	/// Proof: DaoTreasury ProposalCount (max_values: None, max_size: Some(16), added: 2491, mode: MaxEncodedLen)
	/// Storage: DaoTreasury Approvals (r:1 w:1)
	/// Proof: DaoTreasury Approvals (max_values: None, max_size: Some(414), added: 2889, mode: MaxEncodedLen)
	/// Storage: DaoTreasury Proposals (r:0 w:1)
	/// Proof: DaoTreasury Proposals (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	fn spend() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `390`
		//  Estimated: `10985`
		// Minimum execution time: 19_000_000 picoseconds.
		Weight::from_parts(20_000_000, 10985)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Dao Policies (r:1 w:0)
	/// Proof: Dao Policies (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
	/// Storage: Dao Daos (r:1 w:0)
	/// Proof: Dao Daos (max_values: None, max_size: Some(1063), added: 3538, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:1 w:1)
	/// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:2 w:2)
	/// Proof: Assets Account (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn transfer_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `865`
		//  Estimated: `21665`
		// Minimum execution time: 49_000_000 picoseconds.
		Weight::from_parts(49_000_000, 21665)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
}
